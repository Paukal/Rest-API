<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.restservice.TaxRateTests" tests="6" skipped="0" failures="0" errors="0" timestamp="2020-07-14T06:18:12" hostname="DESKTOP-2ALQQDC" time="0.46">
  <properties/>
  <testcase name="putDeleteRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.108"/>
  <testcase name="putTwoTimesRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.047"/>
  <testcase name="postDBNonExistRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.091"/>
  <testcase name="putRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.064"/>
  <testcase name="putGetRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.089"/>
  <testcase name="putPostRequestTest()" classname="com.example.restservice.TaxRateTests" time="0.034"/>
  <system-out><![CDATA[2020-07-14 09:18:09.419  INFO 7752 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.example.restservice.TaxRateTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-07-14 09:18:09.442  INFO 7752 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-07-14 09:18:09.452  INFO 7752 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@777d89f1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@992fc40, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@20b96904, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@41701a4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f3e32d6, org.springframework.test.context.event.EventPublishingTestExecutionListener@150bd8d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6aca05ea, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@566c3336, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@382a03af, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c126df2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6cdcacf]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.0.RELEASE)

2020-07-14 09:18:09.706  INFO 7752 --- [    Test worker] com.example.restservice.TaxRateTests     : Starting TaxRateTests on DESKTOP-2ALQQDC with PID 7752 (started by Paul in C:\Users\Paul\Documents\Study_n_code\JOB\Zenitech\complete)
2020-07-14 09:18:09.706  INFO 7752 --- [    Test worker] com.example.restservice.TaxRateTests     : No active profile set, falling back to default profiles: default
2020-07-14 09:18:11.944  INFO 7752 --- [    Test worker] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 09:18:12.483  INFO 7752 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2020-07-14 09:18:12.483  INFO 7752 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2020-07-14 09:18:12.520  INFO 7752 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 37 ms
2020-07-14 09:18:12.567  INFO 7752 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-07-14 09:18:12.567  INFO 7752 --- [    Test worker] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-07-14 09:18:12.583  INFO 7752 --- [    Test worker] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-07-14 09:18:12.636  INFO 7752 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: createUsingPUT_1
2020-07-14 09:18:12.652  INFO 7752 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: deleteUsingDELETE_1
2020-07-14 09:18:12.652  INFO 7752 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: readUsingGET_1
2020-07-14 09:18:12.652  INFO 7752 --- [    Test worker] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPOST_1
2020-07-14 09:18:12.668  INFO 7752 --- [    Test worker] com.example.restservice.TaxRateTests     : Started TaxRateTests in 3.195 seconds (JVM running for 23.563)

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /deleteTax
       Parameters = {property_type=[apartment]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#delete(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"text/plain;charset=ISO-8859-1", Content-Length:"6"]
     Content type = text/plain;charset=ISO-8859-1
             Body = 200 OK
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /deleteTax
       Parameters = {property_type=[apartment]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#delete(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"text/plain;charset=ISO-8859-1", Content-Length:"6"]
     Content type = text/plain;charset=ISO-8859-1
             Body = 200 OK
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /createTax
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = {
  "property_type" : "flat",
  "amount" : 200,
  "propertyType" : "flat"
}
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#create(TaxRate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=ISO-8859-1", Content-Length:"29"]
     Content type = application/json;charset=ISO-8859-1
             Body = Property type already exists.
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /updateTax
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = {
  "property_type" : "non existant property",
  "amount" : 200,
  "propertyType" : "non existant property"
}
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#update(TaxRate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=ISO-8859-1", Content-Length:"44"]
     Content type = application/json;charset=ISO-8859-1
             Body = This property type does not exist in the DB.
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /createTax
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = {
  "property_type" : "loft",
  "amount" : 200,
  "propertyType" : "loft"
}
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#create(TaxRate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=ISO-8859-1", Content-Length:"6"]
     Content type = application/json;charset=ISO-8859-1
             Body = 200 OK
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /readTax
       Parameters = {property_type=[tower]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#read(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"text/plain;charset=ISO-8859-1", Content-Length:"37"]
     Content type = text/plain;charset=ISO-8859-1
             Body = Property type: 'tower', Amount: '200'
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /readTax
       Parameters = {property_type=[tower]}
          Headers = []
             Body = <no character encoding set>
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#read(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"text/plain;charset=ISO-8859-1", Content-Length:"37"]
     Content type = text/plain;charset=ISO-8859-1
             Body = Property type: 'tower', Amount: '200'
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /updateTax
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = {
  "property_type" : "house",
  "amount" : 150,
  "propertyType" : "house"
}
    Session Attrs = {}

Handler:
             Type = com.example.restservice.TaxRateController
           Method = com.example.restservice.TaxRateController#update(TaxRate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=ISO-8859-1", Content-Length:"6"]
     Content type = application/json;charset=ISO-8859-1
             Body = 200 OK
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
